#TD1 ////////////////////////////////////////////////////////////////////////////////////////
#Exercice 2 :------------------------------------------------------
class Tree2:
    def __init__(self, value):
      self.value = value
      self.child_g = None
      self.child_d = None

    def set_gauche(self, value):
      if self.child_g == None:
         self.child_g = Tree2(value)
      else:
         new_node = Tree2(value)
         new_node.child_g = self.child_g
         self.child_g = new_node

    def set_droit(self, value):
      if self.child_d == None:
         self.child_d = Tree2(value)
      else:
         new_node = Tree2(value)
         new_node.child_d = self.child_d
         self.child_d = new_node

    def get_value(self):
        return self.value

    def get_gauche(self):
        return self.child_g

    def get_droit(self):
        return self.child_d


def affiche(T):
    if T != None:
        return (T.get_value(), affiche(T.get_gauche()), affiche(T.get_droit()))

def parcours_largeur(T):
    if T != None:
        file = []
        file.append(T)
        while len(file) > 0:
            print(' /', file[0].value, end='')
            noeud = file.pop(0)
            if noeud.get_gauche() != None:
                file.append(noeud.get_gauche())
            if noeud.get_droit() != None:
                file.append(noeud.get_droit())

def parcours_profondeur_infixe(T):
    if T != None:
        parcours_profondeur_infixe(T.get_gauche())
        print(' /', T.value, end='')
        parcours_profondeur_infixe(T.get_droit())

def parcours_profondeur_suffixe(T):
    if T != None:
        parcours_profondeur_suffixe(T.get_gauche())
        parcours_profondeur_suffixe(T.get_droit())
        print(' /', T.value, end='')

def parcours_profondeur_prefixe(T):
    if T != None:
        print(' /', T.value, end='')
        parcours_profondeur_prefixe(T.get_gauche())
        parcours_profondeur_prefixe(T.get_droit())

if __name__ == '__main__':

    first = Tree2('20')
    first.set_gauche('5')
    first.set_droit('25')

    five_node = first.get_gauche()
    five_node.set_gauche('3')
    five_node.set_droit('12')

    twentyfive_node = first.get_droit()
    twentyfive_node.set_gauche('21')
    twentyfive_node.set_droit('28')

    twelve_node = five_node.get_droit()
    twelve_node.set_gauche('8')
    twelve_node.set_droit('13')

    eight_node = twelve_node.get_gauche()
    eight_node.set_gauche('6')

    print("Arbre : ", affiche(first))

    # parcours_largeur 20  5  25  3  12 21  28  8  13  6
    print('- parcours largeur : ')
    parcours_largeur(first)

    # Profondeur infixe  3  5  6  8  12  13  20  21  25  28
    print('- parcours profondeur infixe : ')
    parcours_profondeur_infixe(first)

    # Profondeur suffixe  3  6  8  13  12  5  21  28  25  20
    print('- parcours profondeur suffixe : ')
    parcours_profondeur_suffixe(first)

    # Profondeur prefixe  20  5  3  12  8  6  13  25  21  28
    print('- parcours profondeur prefix : ')
    parcours_profondeur_prefixe(first)
